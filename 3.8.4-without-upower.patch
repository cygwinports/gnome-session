--- origsrc/gnome-session-3.8.4/configure.ac	2013-07-30 14:11:51.000000000 -0500
+++ src/gnome-session-3.8.4/configure.ac	2013-08-09 01:32:25.776487100 -0500
@@ -65,11 +65,21 @@ PKG_CHECK_MODULES(GNOME_SESSION,
         gio-2.0 >= $GLIB_REQUIRED
         gtk+-3.0 >= $GTK3_REQUIRED
         dbus-glib-1 >= $DBUS_GLIB_REQUIRED
-        upower-glib >= $UPOWER_REQUIRED
         json-glib-1.0 >= $JSON_GLIB_REQUIRED
         gnome-desktop-3.0 >= $GNOME_DESKTOP_REQUIRED
 )
 
+PKG_CHECK_MODULES(UPOWER,
+        upower-glib >= $UPOWER_REQUIRED,
+        have_upower=true,
+        have_upower=false
+)
+
+if test "$have_upower" = true; then
+  AC_DEFINE(WITH_UPOWER, 1, [Set to 1 if upower-glib is available.])
+fi
+
+
 PKG_CHECK_MODULES(SESSION_PROPERTIES,
         glib-2.0 >= $GLIB_REQUIRED
         gtk+-3.0 >= $GTK3_REQUIRED
--- origsrc/gnome-session-3.8.4/gnome-session/gsm-consolekit.c	2013-07-30 14:11:51.000000000 -0500
+++ src/gnome-session-3.8.4/gnome-session/gsm-consolekit.c	2013-08-09 01:36:19.047829400 -0500
@@ -31,8 +31,10 @@
 #include <dbus/dbus-glib.h>
 #include <dbus/dbus-glib-lowlevel.h>
 
+#ifdef WITH_UPOWER
 #define UPOWER_ENABLE_DEPRECATED 1
 #include <upower.h>
+#endif
 
 #include "gsm-system.h"
 #include "gsm-consolekit.h"
@@ -56,7 +58,9 @@ struct _GsmConsolekitPrivate
         DBusGProxy      *bus_proxy;
         DBusGProxy      *ck_proxy;
         DBusGProxy      *session_proxy;
+#ifdef WITH_UPOWER
         UpClient        *up_client;
+#endif
 
         gboolean         is_active;
         gboolean         restarting;
@@ -306,8 +310,10 @@ gsm_consolekit_ensure_ck_connection (Gsm
                                              G_CALLBACK (on_active_changed), manager, NULL);
         }
 
+#ifdef WITH_UPOWER
         g_clear_object (&manager->priv->up_client);
         manager->priv->up_client = up_client_new ();
+#endif
 
         is_connected = TRUE;
 
@@ -381,7 +387,9 @@ gsm_consolekit_free_dbus (GsmConsolekit
         g_clear_object (&manager->priv->ck_proxy);
         g_clear_object (&manager->priv->session_proxy);
         g_clear_object (&manager->priv->session_id);
+#ifdef WITH_UPOWER
         g_clear_object (&manager->priv->up_client);
+#endif
 
         if (manager->priv->dbus_connection != NULL) {
                 DBusConnection *connection;
@@ -948,22 +956,31 @@ gsm_consolekit_is_login_session (GsmSyst
 static gboolean
 gsm_consolekit_can_suspend (GsmSystem *system)
 {
+#ifdef WITH_UPOWER
         GsmConsolekit *consolekit = GSM_CONSOLEKIT (system);
 
         return up_client_get_can_suspend (consolekit->priv->up_client);
+#else
+        return FALSE;
+#endif
 }
 
 static gboolean
 gsm_consolekit_can_hibernate (GsmSystem *system)
 {
+#ifdef WITH_UPOWER
         GsmConsolekit *consolekit = GSM_CONSOLEKIT (system);
 
         return up_client_get_can_hibernate (consolekit->priv->up_client);
+#else
+        return FALSE;
+#endif
 }
 
 static void
 gsm_consolekit_suspend (GsmSystem *system)
 {
+#ifdef WITH_UPOWER
         GsmConsolekit *consolekit = GSM_CONSOLEKIT (system);
         GError *error = NULL;
         gboolean ret;
@@ -973,11 +990,13 @@ gsm_consolekit_suspend (GsmSystem *syste
                 g_warning ("Unexpected suspend failure: %s", error->message);
                 g_error_free (error);
         }
+#endif
 }
 
 static void
 gsm_consolekit_hibernate (GsmSystem *system)
 {
+#ifdef WITH_UPOWER
         GsmConsolekit *consolekit = GSM_CONSOLEKIT (system);
         GError *error = NULL;
         gboolean ret;
@@ -987,6 +1006,7 @@ gsm_consolekit_hibernate (GsmSystem *sys
                 g_warning ("Unexpected hibernate failure: %s", error->message);
                 g_error_free (error);
         }
+#endif
 }
 
 static void
--- origsrc/gnome-session-3.8.4/gnome-session/gsm-logout-dialog.c	2013-02-19 12:33:13.000000000 -0600
+++ src/gnome-session-3.8.4/gnome-session/gsm-logout-dialog.c	2013-08-09 01:37:32.977057900 -0500
@@ -27,8 +27,10 @@
 #include <glib/gi18n.h>
 #include <gtk/gtk.h>
 
+#ifdef WITH_UPOWER
 #define UPOWER_ENABLE_DEPRECATED 1
 #include <upower.h>
+#endif
 
 #include "gsm-logout-dialog.h"
 #include "gsm-system.h"
@@ -48,7 +50,9 @@ struct _GsmLogoutDialogPrivate
 {
         GsmDialogLogoutType  type;
 
+#ifdef WITH_UPOWER
         UpClient            *up_client;
+#endif
         GsmSystem           *system;
 
         int                  timeout;
@@ -140,7 +144,9 @@ gsm_logout_dialog_init (GsmLogoutDialog
         gtk_window_set_keep_above (GTK_WINDOW (logout_dialog), TRUE);
         gtk_window_stick (GTK_WINDOW (logout_dialog));
 
+#ifdef WITH_UPOWER
         logout_dialog->priv->up_client = up_client_new ();
+#endif
 
         logout_dialog->priv->system = gsm_get_system ();
 
@@ -164,7 +170,9 @@ gsm_logout_dialog_destroy (GsmLogoutDial
                 logout_dialog->priv->timeout_id = 0;
         }
 
+#ifdef WITH_UPOWER
         g_clear_object (&logout_dialog->priv->up_client);
+#endif
         g_clear_object (&logout_dialog->priv->system);
 
         current_dialog = NULL;
@@ -173,13 +181,21 @@ gsm_logout_dialog_destroy (GsmLogoutDial
 static gboolean
 gsm_logout_supports_system_suspend (GsmLogoutDialog *logout_dialog)
 {
+#ifdef WITH_UPOWER
         return up_client_get_can_suspend (logout_dialog->priv->up_client);
+#else
+        return FALSE;
+#endif
 }
 
 static gboolean
 gsm_logout_supports_system_hibernate (GsmLogoutDialog *logout_dialog)
 {
+#ifdef WITH_UPOWER
         return up_client_get_can_hibernate (logout_dialog->priv->up_client);
+#else
+        return FALSE;
+#endif
 }
 
 static gboolean
